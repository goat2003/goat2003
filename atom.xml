<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>西城の博客</title>
  <icon>http://example.com/icon.png</icon>
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-06-15T08:35:58.638Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>西城</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PE文件笔记十 扩大节</title>
    <link href="http://example.com/2021/06/15/pe%E6%80%BB%E7%BB%9310/"/>
    <id>http://example.com/2021/06/15/pe%E6%80%BB%E7%BB%9310/</id>
    <published>2021-06-15T07:59:28.000Z</published>
    <updated>2021-06-15T08:35:58.638Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;经过前面的实战&lt;a href=&quot;https://www.52pojie.cn/thread-1408866-1-1.html&quot;&gt;PE文件笔记八 实战之HOOK程序添加弹窗&lt;/a&gt;和&lt;a</summary>
        
      
    
    
    
    <category term="pe" scheme="http://example.com/categories/pe/"/>
    
    
    <category term="pe" scheme="http://example.com/tags/pe/"/>
    
  </entry>
  
  <entry>
    <title>PE文件笔记九 实战之HOOK程序添加弹窗续</title>
    <link href="http://example.com/2021/06/15/pe%E6%80%BB%E7%BB%939/"/>
    <id>http://example.com/2021/06/15/pe%E6%80%BB%E7%BB%939/</id>
    <published>2021-06-15T07:58:28.000Z</published>
    <updated>2021-06-15T08:36:30.838Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;在前面的&lt;a href=&quot;https://www.52pojie.cn/thread-1408866-1-1.html&quot;&gt;PE文件笔记八</summary>
        
      
    
    
    
    <category term="pe" scheme="http://example.com/categories/pe/"/>
    
    
    <category term="pe" scheme="http://example.com/tags/pe/"/>
    
  </entry>
  
  <entry>
    <title>PE文件笔记八 实战之HOOK程序添加弹窗</title>
    <link href="http://example.com/2021/06/15/pe%E6%80%BB%E7%BB%938/"/>
    <id>http://example.com/2021/06/15/pe%E6%80%BB%E7%BB%938/</id>
    <published>2021-06-15T07:56:28.000Z</published>
    <updated>2021-06-15T08:39:34.750Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;前面学习了PE的结构后，尝试结合先前所学，修改PE文件来实现给程序添加弹窗的功能PS：这篇笔记并&lt;strong&gt;没有怎么涉及PE的知识点&lt;/strong&gt;，重点放在了&lt;strong&gt;HOOK、反汇编和硬编码&lt;/strong&gt;上，对PE不是很了解也可以看看，涉及PE知识点的内</summary>
        
      
    
    
    
    <category term="pe" scheme="http://example.com/categories/pe/"/>
    
    
    <category term="pe" scheme="http://example.com/tags/pe/"/>
    
  </entry>
  
  <entry>
    <title>PE文件笔记七 RVA与FOA转换</title>
    <link href="http://example.com/2021/06/15/pe%E6%80%BB%E7%BB%937/"/>
    <id>http://example.com/2021/06/15/pe%E6%80%BB%E7%BB%937/</id>
    <published>2021-06-15T07:53:28.000Z</published>
    <updated>2021-06-15T08:38:57.422Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;前面学习了在块表中提到了VA和FOA，这次来学习它们之间的转换&lt;/p&gt;
&lt;h1 id=&quot;VA转FOA&quot;&gt;&lt;a href=&quot;#VA转FOA&quot; class=&quot;headerlink&quot; title=&quot;VA转FOA&quot;&gt;&lt;/a&gt;VA转FOA&lt;/h1&gt;&lt;p&gt;在先前的笔记&lt;a</summary>
        
      
    
    
    
    <category term="pe" scheme="http://example.com/categories/pe/"/>
    
    
    <category term="pe" scheme="http://example.com/tags/pe/"/>
    
  </entry>
  
  <entry>
    <title>PE文件笔记六 节表和节</title>
    <link href="http://example.com/2021/06/15/PE%E6%80%BB%E7%BB%936/"/>
    <id>http://example.com/2021/06/15/PE%E6%80%BB%E7%BB%936/</id>
    <published>2021-06-15T07:50:28.000Z</published>
    <updated>2021-06-15T08:40:07.159Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;前面学习了PE的DOS部首和PE文件头，这次学习的结构为PE节表&lt;/p&gt;
&lt;p&gt;PS：关于PE文件头中扩展PE头的&lt;strong&gt;数据目录项&lt;/strong&gt;，其中包含了导入表、导出表、重定位表等等，暂且留作之后&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;PE节表&quot;&gt;&lt;a</summary>
        
      
    
    
    
    <category term="pe" scheme="http://example.com/categories/pe/"/>
    
    
    <category term="pe" scheme="http://example.com/tags/pe/"/>
    
  </entry>
  
  <entry>
    <title>PE文件笔记五 PE文件头之扩展PE头</title>
    <link href="http://example.com/2021/06/15/pe%E6%80%BB%E7%BB%935/"/>
    <id>http://example.com/2021/06/15/pe%E6%80%BB%E7%BB%935/</id>
    <published>2021-06-15T07:47:28.000Z</published>
    <updated>2021-06-15T08:40:39.134Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;继续具体学习PE的各个结构细节，前面学完了标准PE头，接着学习扩展PE头&lt;/p&gt;
&lt;p&gt;由于PE文件头的内容较多，故要拆分为多个笔记，此笔记主要为&lt;strong&gt;扩展PE头&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;PS：扩展PE头的成员较多，可以&lt;strong&gt;先看个大概后结合下面</summary>
        
      
    
    
    
    <category term="pe" scheme="http://example.com/categories/pe/"/>
    
    
    <category term="pe" scheme="http://example.com/tags/pe/"/>
    
  </entry>
  
  <entry>
    <title>PE文件笔记四 PE文件头之标准PE头</title>
    <link href="http://example.com/2021/06/15/PE%E6%80%BB%E7%BB%934/"/>
    <id>http://example.com/2021/06/15/PE%E6%80%BB%E7%BB%934/</id>
    <published>2021-06-15T07:45:28.000Z</published>
    <updated>2021-06-15T08:41:17.390Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;转载好文 (๑•̀ㅂ•́)و✧&lt;/p&gt;
&lt;p&gt;继续具体学习PE的各个结构细节，前面学完了DOS部首，接着学习PE文件头&lt;/p&gt;
&lt;p&gt;由于PE文件头的内容较多，故要拆分为多个笔记，此笔记主要为&lt;strong&gt;标准PE头&lt;/strong&gt;&lt;/p&gt;
&lt;h1</summary>
        
      
    
    
    
    <category term="pe" scheme="http://example.com/categories/pe/"/>
    
    
    <category term="pe" scheme="http://example.com/tags/pe/"/>
    
  </entry>
  
  <entry>
    <title>PE文件笔记三 DOS部分</title>
    <link href="http://example.com/2021/06/15/pe%E6%80%BB%E7%BB%933/"/>
    <id>http://example.com/2021/06/15/pe%E6%80%BB%E7%BB%933/</id>
    <published>2021-06-15T07:38:28.000Z</published>
    <updated>2021-06-15T08:41:35.471Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;先转载一下怕以后找不到ヽ(✿ﾟ▽ﾟ)ノ&lt;/p&gt;
&lt;p&gt;前面学习了PE结构的总体结构，接下来将具体学习PE的各个结构细节&lt;/p&gt;
&lt;p&gt;这次学习的结构为DOS 部首&lt;/p&gt;
&lt;h1 id=&quot;DOS部首&quot;&gt;&lt;a href=&quot;#DOS部首&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="pe" scheme="http://example.com/categories/pe/"/>
    
    
    <category term="pe" scheme="http://example.com/tags/pe/"/>
    
  </entry>
  
  <entry>
    <title>攻防世界 re -re1</title>
    <link href="http://example.com/2021/06/15/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cre1/"/>
    <id>http://example.com/2021/06/15/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cre1/</id>
    <published>2021-06-15T05:51:28.000Z</published>
    <updated>2021-06-15T07:42:20.185Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;一天一道ctf系列&lt;/p&gt;
&lt;p&gt;&lt;a</summary>
        
      
    
    
    
    <category term="ctf-re" scheme="http://example.com/categories/ctf-re/"/>
    
    
    <category term="ctf-re" scheme="http://example.com/tags/ctf-re/"/>
    
  </entry>
  
  <entry>
    <title>esp定律脱壳</title>
    <link href="http://example.com/2021/06/14/esp%E5%AE%9A%E5%BE%8B%E8%84%B1%E5%A3%B3/"/>
    <id>http://example.com/2021/06/14/esp%E5%AE%9A%E5%BE%8B%E8%84%B1%E5%A3%B3/</id>
    <published>2021-06-14T09:55:28.000Z</published>
    <updated>2021-06-14T10:55:22.001Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;esp定律脱壳&lt;/p&gt;
&lt;p&gt;————————————纯属个人理解，如有不对求大佬指正。&lt;/p&gt;
&lt;p&gt;看了好多关于esp定律脱壳的文章，都没看懂，o(≧口≦)o，可能是本人太笨了吧。所以就来浅谈一下自己对于esp脱壳的理解。&lt;/p&gt;
&lt;p&gt;个人对于esp脱壳的理解是先把壳</summary>
        
      
    
    
    
    <category term="逆向" scheme="http://example.com/categories/%E9%80%86%E5%90%91/"/>
    
    
    <category term="逆向" scheme="http://example.com/tags/%E9%80%86%E5%90%91/"/>
    
  </entry>
  
  <entry>
    <title>PE文件笔记二 PE文件的两种状态</title>
    <link href="http://example.com/2021/06/12/pe%E6%80%BB%E7%BB%932/"/>
    <id>http://example.com/2021/06/12/pe%E6%80%BB%E7%BB%932/</id>
    <published>2021-06-12T03:34:28.000Z</published>
    <updated>2021-06-15T08:41:54.181Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;一篇转载文章，转载于：&lt;a</summary>
        
      
    
    
    
    <category term="pe" scheme="http://example.com/categories/pe/"/>
    
    
    <category term="pe" scheme="http://example.com/tags/pe/"/>
    
  </entry>
  
  <entry>
    <title>PE文件笔记一 PE介绍</title>
    <link href="http://example.com/2021/06/12/pe%E6%80%BB%E7%BB%931/"/>
    <id>http://example.com/2021/06/12/pe%E6%80%BB%E7%BB%931/</id>
    <published>2021-06-12T03:31:28.000Z</published>
    <updated>2021-06-12T03:32:05.111Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;近期发现了一个超牛逼的大佬，和大佬写的超详细的pe总结，所以就根据（抄袭）大佬文章做一些pe总结来巩固学习。&lt;/p&gt;
&lt;p&gt;先挂上大佬文章链接：&lt;a</summary>
        
      
    
    
    
    <category term="pe" scheme="http://example.com/categories/pe/"/>
    
    
    <category term="pe" scheme="http://example.com/tags/pe/"/>
    
  </entry>
  
  <entry>
    <title>pe文件结构新增节</title>
    <link href="http://example.com/2021/06/11/pe%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E6%96%B0%E5%A2%9E%E8%8A%82/"/>
    <id>http://example.com/2021/06/11/pe%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E6%96%B0%E5%A2%9E%E8%8A%82/</id>
    <published>2021-06-11T10:30:28.000Z</published>
    <updated>2021-06-11T10:59:03.478Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;首先先了解一下节表&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如下图，打开一个exe文件，我们可以看到有多个节表。&lt;br&gt;&lt;img</summary>
        
      
    
    
    
    <category term="pe" scheme="http://example.com/categories/pe/"/>
    
    
    <category term="pe" scheme="http://example.com/tags/pe/"/>
    
  </entry>
  
  <entry>
    <title>pe文件结构在空白区添加代码</title>
    <link href="http://example.com/2021/06/10/pe%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E5%9C%A8%E7%A9%BA%E7%99%BD%E5%8C%BA%E6%B7%BB%E5%8A%A0%E4%BB%A3%E7%A0%81/"/>
    <id>http://example.com/2021/06/10/pe%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E5%9C%A8%E7%A9%BA%E7%99%BD%E5%8C%BA%E6%B7%BB%E5%8A%A0%E4%BB%A3%E7%A0%81/</id>
    <published>2021-06-10T13:29:28.000Z</published>
    <updated>2021-06-10T13:30:06.256Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;h2 id=&quot;想要再空白区添加代码，首先我们需要清晰一下我们需要做的步骤。&quot;&gt;&lt;a href=&quot;#想要再空白区添加代码，首先我们需要清晰一下我们需要做的步骤。&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="pe" scheme="http://example.com/categories/pe/"/>
    
    
    <category term="pe" scheme="http://example.com/tags/pe/"/>
    
  </entry>
  
  <entry>
    <title>对于硬编码的一些理解（水）</title>
    <link href="http://example.com/2021/06/08/%E5%AF%B9%E4%BA%8E%E7%A1%AC%E7%BC%96%E7%A0%81%E7%9A%84%E7%90%86%E8%A7%A3%EF%BC%88%E6%B0%B4%EF%BC%89/"/>
    <id>http://example.com/2021/06/08/%E5%AF%B9%E4%BA%8E%E7%A1%AC%E7%BC%96%E7%A0%81%E7%9A%84%E7%90%86%E8%A7%A3%EF%BC%88%E6%B0%B4%EF%BC%89/</id>
    <published>2021-06-08T08:58:28.000Z</published>
    <updated>2021-06-08T09:07:01.665Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;在最近的学习过程中，了解到了硬编码这一个名词，于是就去百度了一下，从字面意思上来看，我对硬编码的理解就是一种类似于编程语言的东西，但百度过后发现好像每一篇文章对硬编码的讲解都不大一样，搞得我一脸懵逼，于是就来总结一下各篇文章的讲解。首先我们看一下百度百科的结果：&lt;/p&gt;
&lt;</summary>
        
      
    
    
    
    <category term="计算机" scheme="http://example.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
    <category term="计算机" scheme="http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>pe文件对齐</title>
    <link href="http://example.com/2021/06/08/pe%E6%96%87%E4%BB%B6%E5%AF%B9%E9%BD%90/"/>
    <id>http://example.com/2021/06/08/pe%E6%96%87%E4%BB%B6%E5%AF%B9%E9%BD%90/</id>
    <published>2021-06-08T05:27:00.000Z</published>
    <updated>2021-06-08T05:47:04.184Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;内存对齐与文件对齐&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一个pe文件无论在磁盘和内存中存放都会进行对齐，但他们的对齐值会不相同。&lt;br&gt;PE 文件头里边的FileAligment</summary>
        
      
    
    
    
    <category term="pe" scheme="http://example.com/categories/pe/"/>
    
    
    <category term="pe" scheme="http://example.com/tags/pe/"/>
    
  </entry>
  
  <entry>
    <title>pe字段总结(持续更新中...)</title>
    <link href="http://example.com/2021/06/01/pe%E6%80%BB%E7%BB%93/"/>
    <id>http://example.com/2021/06/01/pe%E6%80%BB%E7%BB%93/</id>
    <published>2021-06-01T14:01:28.000Z</published>
    <updated>2021-06-09T13:43:59.682Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;strong&gt;首先放一张pe文件结构图&lt;/strong&gt;&lt;br&gt;&lt;img</summary>
        
      
    
    
    
    <category term="pe" scheme="http://example.com/categories/pe/"/>
    
    
    <category term="pe" scheme="http://example.com/tags/pe/"/>
    
  </entry>
  
  <entry>
    <title>malloc函数</title>
    <link href="http://example.com/2021/05/31/malloc%E5%87%BD%E6%95%B0/"/>
    <id>http://example.com/2021/05/31/malloc%E5%87%BD%E6%95%B0/</id>
    <published>2021-05-31T10:01:28.000Z</published>
    <updated>2021-06-08T05:50:45.191Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;今天学习了malloc函数，个人感觉就是一个划分内存空间的工具，&lt;br&gt;以下是关于malloc函数的定义。&lt;br&gt;C语言中malloc是动态内存分配函数。&lt;br&gt;函数原型：&lt;code&gt;void *malloc(unsigned int</summary>
        
      
    
    
    
    <category term="c语言" scheme="http://example.com/categories/c%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="c语言" scheme="http://example.com/tags/c%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>关于搭建博客时遇到的麻烦报错</title>
    <link href="http://example.com/2021/05/30/001/"/>
    <id>http://example.com/2021/05/30/001/</id>
    <published>2021-05-30T11:00:28.000Z</published>
    <updated>2021-06-08T05:49:51.445Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;strong&gt;1、hexo初始化博客&lt;/strong&gt;&lt;br&gt;这里主要有两个命令，一个是npm install -g hexo-cli，这个命令能碰到的的问题主要是卡住，建议下载一个淘宝镜像&lt;br&gt;第二个是hexo</summary>
        
      
    
    
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>关于vs编写c语言时的不安全报错</title>
    <link href="http://example.com/2021/05/30/5-30/"/>
    <id>http://example.com/2021/05/30/5-30/</id>
    <published>2021-05-30T02:21:28.000Z</published>
    <updated>2021-06-08T05:50:05.471Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;之所以会报错，是因为vs觉得scanf函数不安全，所以我们只需要取消安全检查就可以了，在头文件前加上 _CRT_SECURE_NO_WARNING</summary>
        
      
    
    
    
    <category term="c语言" scheme="http://example.com/categories/c%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="vs" scheme="http://example.com/tags/vs/"/>
    
  </entry>
  
</feed>
